/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controller.BillController;
import controller.ClerkController;
import controller.DoctorController;
import controller.EmployeeController;
import controller.NurseController;
import controller.PatientController;
import controller.ReceptionistController;
import controller.TestController;
import java.awt.BorderLayout;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
/**
 *
 * @author sanu
 */
public class Add extends javax.swing.JPanel {
    
    /**
     * Creates new form Add
     */
   
    
    public Add() {
        initComponents();
      
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        addPanel3 = new javax.swing.JPanel();
        addPanel2 = new javax.swing.JPanel();
        newPatientButton = new javax.swing.JButton();
        newAdmissionButton = new javax.swing.JToggleButton();
        doctorButton = new javax.swing.JButton();
        nurseButton = new javax.swing.JButton();
        receptionistButton = new javax.swing.JToggleButton();
        clerkButton = new javax.swing.JButton();
        testButton = new javax.swing.JButton();
        addPanel1 = new javax.swing.JPanel();
        backButton = new javax.swing.JButton();

        addPanel3.setBackground(new java.awt.Color(255, 255, 255));

        addPanel2.setBackground(new java.awt.Color(255, 102, 153));

        newPatientButton.setBackground(new java.awt.Color(0, 204, 204));
        newPatientButton.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        newPatientButton.setText("New Patient");
        newPatientButton.setBorder(null);
        newPatientButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newPatientButtonActionPerformed(evt);
            }
        });

        newAdmissionButton.setBackground(new java.awt.Color(0, 204, 204));
        newAdmissionButton.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        newAdmissionButton.setText("New Admission");
        newAdmissionButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newAdmissionButtonActionPerformed(evt);
            }
        });

        doctorButton.setBackground(new java.awt.Color(0, 204, 204));
        doctorButton.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        doctorButton.setText("Doctor");
        doctorButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doctorButtonActionPerformed(evt);
            }
        });

        nurseButton.setBackground(new java.awt.Color(0, 204, 204));
        nurseButton.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        nurseButton.setText("Nurse");
        nurseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nurseButtonActionPerformed(evt);
            }
        });

        receptionistButton.setBackground(new java.awt.Color(0, 204, 204));
        receptionistButton.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        receptionistButton.setText("Receptionist");
        receptionistButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                receptionistButtonActionPerformed(evt);
            }
        });

        clerkButton.setBackground(new java.awt.Color(0, 204, 204));
        clerkButton.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        clerkButton.setText("Clerk");
        clerkButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clerkButtonActionPerformed(evt);
            }
        });

        testButton.setBackground(new java.awt.Color(0, 204, 204));
        testButton.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        testButton.setText("Test");
        testButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                testButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout addPanel2Layout = new javax.swing.GroupLayout(addPanel2);
        addPanel2.setLayout(addPanel2Layout);
        addPanel2Layout.setHorizontalGroup(
            addPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(newPatientButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(newAdmissionButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(doctorButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(nurseButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(receptionistButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(clerkButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(testButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        addPanel2Layout.setVerticalGroup(
            addPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(newPatientButton, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(newAdmissionButton, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(doctorButton, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(nurseButton, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(receptionistButton, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(clerkButton, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(testButton, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(32, Short.MAX_VALUE))
        );

        addPanel1.setBackground(new java.awt.Color(255, 255, 153));

        backButton.setText("Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout addPanel1Layout = new javax.swing.GroupLayout(addPanel1);
        addPanel1.setLayout(addPanel1Layout);
        addPanel1Layout.setHorizontalGroup(
            addPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addPanel1Layout.createSequentialGroup()
                .addContainerGap(714, Short.MAX_VALUE)
                .addComponent(backButton)
                .addGap(43, 43, 43))
        );
        addPanel1Layout.setVerticalGroup(
            addPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(backButton)
                .addGap(30, 30, 30))
        );

        javax.swing.GroupLayout addPanel3Layout = new javax.swing.GroupLayout(addPanel3);
        addPanel3.setLayout(addPanel3Layout);
        addPanel3Layout.setHorizontalGroup(
            addPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addPanel3Layout.createSequentialGroup()
                .addComponent(addPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        addPanel3Layout.setVerticalGroup(
            addPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(addPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(addPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(addPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(addPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void doctorButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doctorButtonActionPerformed
        DoctorEntryForm def = new DoctorEntryForm();
        def.setVisible(true);
        addPanel1.setLayout(new BorderLayout());
        addPanel1.removeAll();
        addPanel1.add(def);
        addPanel1.validate();
        addPanel1.repaint();
        
        //Auto fill Doctor_id to doctor entry form
        int doctorId;
        try {
            doctorId = DoctorController.getLastDoctorId();
            String di = new Integer(doctorId+1).toString();
            def.doctorIdText.setText(di);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Add.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Add.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        //Auto fill Employee_id to Clerk Entry Form
        int employeeId;
        try {
            employeeId = EmployeeController.getLastEmployeeId();
            String ci = new Integer(employeeId+1).toString();
            def.employeeIdText.setText(ci);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Add.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Add.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_doctorButtonActionPerformed

    private void nurseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nurseButtonActionPerformed
        NurseEntryForm nef = new NurseEntryForm();
        nef.setVisible(true);
        addPanel1.setLayout(new BorderLayout());
        addPanel1.removeAll();
        addPanel1.add(nef);
        addPanel1.validate();
        addPanel1.repaint();
        
        //Auto fill Nurse_id to nurse entry form
        int nurseId;
        try {
            nurseId = NurseController.getLastNurseId();
            String di = new Integer(nurseId+1).toString();
            nef.nurseIdText.setText(di);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Add.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Add.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        //Auto fill Employee_id to nurse Entry Form
        int employeeId;
        try {
            employeeId = EmployeeController.getLastEmployeeId();
            String ci = new Integer(employeeId+1).toString();
            nef.employeeIdText.setText(ci);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Add.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Add.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_nurseButtonActionPerformed

    private void receptionistButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_receptionistButtonActionPerformed
        ReceptionistEntryForm ref = new ReceptionistEntryForm();
        ref.setVisible(true);
        addPanel1.setLayout(new BorderLayout());
        addPanel1.removeAll();
        addPanel1.add(ref);
        addPanel1.validate();
        addPanel1.repaint();
        
        //Auto fill Receptionist_id to receptionist entry form
        int receptionistId;
        try {
            receptionistId = ReceptionistController.getLastReceptionistId();
            String di = new Integer(receptionistId+1).toString();
            ref.receptionistIdText.setText(di);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Add.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Add.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        //Auto fill Employee_id to ReceptionistEntryForm
        int employeeId;
        try {
            employeeId = EmployeeController.getLastEmployeeId();
            String ci = new Integer(employeeId+1).toString();
            ref.employeeIdText.setText(ci);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Add.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Add.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_receptionistButtonActionPerformed

    private void clerkButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clerkButtonActionPerformed
        ClerkEntryForm cef = new ClerkEntryForm();
        cef.setVisible(true);
        addPanel1.setLayout(new BorderLayout());
        addPanel1.removeAll();
        addPanel1.add(cef);
        addPanel1.validate();
        addPanel1.repaint();
        
        //Auto fill clerk id to ClerkEntryForm
        int clerkId;
        try {
            clerkId = ClerkController.getLastClerkId();
            String ci = new Integer(clerkId+1).toString();
            cef.clerkIdText.setText(ci);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Add.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Add.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        //Auto fill Employee_id to ClerkEntryForm
        int employeeId;
        try {
            employeeId = EmployeeController.getLastEmployeeId();
            String ci = new Integer(employeeId+1).toString();
            cef.employeeIdText.setText(ci);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Add.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Add.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_clerkButtonActionPerformed

    private void newPatientButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newPatientButtonActionPerformed
        PatientEntryForm pef = new PatientEntryForm();
        pef.setVisible(true);
        addPanel1.setLayout(new BorderLayout());
        addPanel1.removeAll();
        addPanel1.add(pef);
        addPanel1.validate();
        addPanel1.repaint();
        
        //Auto fill patient id to PatientEntryForm
        try {
            int patientId = PatientController.getLastPatientId();
            String id = new Integer(patientId+1).toString();
            pef.patientIdText.setText(id);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Add.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Add.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_newPatientButtonActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        HomePage hp = new HomePage();
        hp.setVisible(true);
        addPanel1.setLayout(new BorderLayout());
        addPanel1.removeAll();
        addPanel1.add(hp);
        addPanel1.validate();
        addPanel1.repaint();
    }//GEN-LAST:event_backButtonActionPerformed

    private void newAdmissionButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newAdmissionButtonActionPerformed
        NewAdmissionGetPatientId nagpi = new NewAdmissionGetPatientId();
        nagpi.setVisible(true);
        addPanel1.setLayout(new BorderLayout());
        addPanel1.removeAll();
        addPanel1.add(nagpi);
        addPanel1.validate();
        addPanel1.repaint();
    }//GEN-LAST:event_newAdmissionButtonActionPerformed

    private void testButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_testButtonActionPerformed
        TestEntryForm tef = new TestEntryForm();
        tef.setVisible(true);
        addPanel1.setLayout(new BorderLayout());
        addPanel1.removeAll();
        addPanel1.add(tef);
        addPanel1.validate();
        addPanel1.repaint();
        
        //Auto fill test id to ClerkEntryForm
        int testId;
        try {
            testId = TestController.getLastTestId();
            String ci = new Integer(testId+1).toString();
            tef.testIdText.setText(ci);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Add.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Add.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_testButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JPanel addPanel1;
    private javax.swing.JPanel addPanel2;
    private javax.swing.JPanel addPanel3;
    private javax.swing.JButton backButton;
    private javax.swing.JButton clerkButton;
    private javax.swing.JButton doctorButton;
    private javax.swing.JToggleButton newAdmissionButton;
    private javax.swing.JButton newPatientButton;
    private javax.swing.JButton nurseButton;
    private javax.swing.JToggleButton receptionistButton;
    private javax.swing.JButton testButton;
    // End of variables declaration//GEN-END:variables

    
    
}
